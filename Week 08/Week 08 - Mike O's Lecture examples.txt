******************************************************
COIT11134 Object Oriented Programming (2022-T2)
Week: 08
Course WEB Page (Moodle):         https://moodle.cqu.edu.au/course/view.php?id=37696
Course Coordinator:               Salahuddin Azad, Melbourne Campus, Email: s.azad@cqu.edu.au, Phone: +61-03-9616-0680
Rocky Teacher (Part-Time):        Mike O'Malley, m.omalley@cqu.edu.au
Mike O's GitHub for course/term:  https://github.com/MooseValley/uni-COIT11134-Object-Oriented-Programming-2022-T2
Mike O'Malley's Java Videos (incl JavaFX, etc):            http://tinyurl.com/MikesJavaVideos
Mike O'Malley's JavaFX + Netbeans + Scene Builder Videos:  http://tinyurl.com/MikesJavaFXVideos
******************************************************

ROAD MAP:
Week 1 - Revision of Java, Classes, Objects.
Week 2 - Inheritance
Week 3 - Polymorphism
Week 4 - GUI and Event Handling Part A
Week 5 - GUI and Event Handling Part B.  Next week: mid-term break
Week 6 - Introduction to Git and Version Control
Week 7 - Java Exception Handling, and Revisit Files IO
Week 8 - Interfaces and Inner Classes    <--- YOU ARE HERE !
Week 9 - Generic Methods
Week 10 - Generic Classes
Week 11 - Linked Lists, Files and Algorithms
Week 12 - Stacks, Queues and Trees



LAST WEEK: Week 07
* Week 7 - Java Exception Handling, and Revisit Files IO

THIS WEEK: Week 08
* Week 8 - Interfaces and Inner Classes    <--- YOU ARE HERE !


Classes:
public class: basic Java class
Abstract class: template, forcing design on the children.  e.g. they have to implement calculatePay() or whatever.
inner class: class inside a class, inner class can access / use outer classes fields, etc.
Interface Class: template, forcing design on the children, ...
Concrete class:

Abstract   VS                       Interface
extends                             implements
Max 1                               O, 1, 2, ....
can implement an interface          can an interface implement an interface ?
can it extend another class ?       can it extend another class ?
                                    can it extend an abstract class
RULE: Do NOT Abuse the inheritance hierarchy
eg. public class Employee extends BuildingApplication

Only true children or grandchildren should be in the hierarchy
eg. Person -> Employee -> Manager



**************************************
Model View Controller (MVC)
**************************************
Kitcken Sink
    Old days: GUI class - have data structures for Employees, Courses, etc - everything including the kitchen sink.
    very difficult to test
    almost impossible to re-use without extracting code, copy paste.
    dumped into one file (or a few files) without regard to modern good design principles
    Difficult to understand

Object Oriented Design (OOD)
    class for each Object type: Employee class, Course class, etc - all of the data and 
    the methods to work on each type data was contained inside the class.
    GUI which contained the logic, views, etc for dealing with these classes

MVC
    Employee class - data class with setters, getters, contructors, toString, compareTo
    Employee View(s) - GUI screens, display all employee view, search employee view, edit employee view, delete employee view, ...
    Employee Controller(s) - brains, logic, storage (ArrayLists), file I/O, database i/o, getArrayList() ?? ....
    Course class
    Course view(s)
    Course Controller(s) 
    Very easy to unit and system test
    Very easy to re-use
    Easy to understand *** much easier than Kitcken Sink and OOD (once you get your head around MVC)


Mike O'Malley's JavaFX + Netbeans Videos: 
http://tinyurl.com/MikesJavaFXVideos

shows you how to build a MVC project from scratch:
* add / display students
* add / display courses
* add / display student enrolments
* file I/o
* etc


EOF.
